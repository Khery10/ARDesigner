// Generated by Dagger (https://google.github.io/dagger).
package com.example.android.ardesigner.basic.di;

import com.example.android.ardesigner.basic.repository.interfaces.IProductRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideProductRepositoryFactory
    implements Factory<IProductRepository> {
  private final AppModule module;

  public AppModule_ProvideProductRepositoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public IProductRepository get() {
    return provideInstance(module);
  }

  public static IProductRepository provideInstance(AppModule module) {
    return proxyProvideProductRepository(module);
  }

  public static AppModule_ProvideProductRepositoryFactory create(AppModule module) {
    return new AppModule_ProvideProductRepositoryFactory(module);
  }

  public static IProductRepository proxyProvideProductRepository(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideProductRepository(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
